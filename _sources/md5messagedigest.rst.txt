.. _md5messagedigest:



MD5MessageDigest
================


Computes MD5 digest value of the input message (deprecated).


Syntax
------


IppStatus ippsMD5MessageDigest(const Ipp8u \*pMsg, int len, Ipp8u
\*pMD);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * -     pMsg   
     -  Pointer to the input message.
   * -     len   
     -  Message length in octets.
   * -     pMD   
     -  Pointer to the resultant digest.




Description
-----------


.. note::


   This algorithm is considered weak due to known attacks on it. The
   functionality remains in the library, but the implementation will no
   longer be optimized and no security patches will be applied.


The function uses the selected hash algorithm to compute digest value of
the entire (non-streaming) input message.


Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * -     ippStsNoErr   
     -  Indicates no error. Any other value indicates an error or warning.
   * -     ippStsNullPtrErr   
     -  Indicates an error condition if any of the specified pointers is NULL.
   * -     ippStsLengthErr   
     -  Indicates an error condition if the input data stream length is less than zero.




Example
-------


The code example below shows MD5 digest of a message.


.. code:: 


   void MD5_sample(void){
      // define message
    

      Ipp8u msg[] = "abcdefghijklmnopqrstuvwxyz";
   Â 

      // once the whole message is placed into memory,
      // one can use the integrated primitive
      Ipp8u digest[16];
      ippsMD5MessageDigest(msg, strlen((char*)msg), digest);
   }

