.. _eccppublickey:



ECCPPublicKey
=============


Computes a public key from the given private key of the elliptic
cryptosystem over GF(p).


Syntax
------


IppStatus ippsECCPPublicKey(const IppsBigNumState\* pPrivate,
IppsECCPPointState\* pPublic, IppsECCPState\* pECC);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * - pPrivate   
     - Pointer to the private key ``privKey``.
   * - pPublic   
     - Pointer to the public key ``pubKey``.
   * - pECC   
     - Pointer to the context of the elliptic cryptosystem.




Description
-----------


The function computes the public key ``pubKey`` from the given private
key *privKey* of the elliptic cryptosystem over a finite field GF(*p*).


The private key ``privKey`` is a number that lies in the range of [1,
*n*-1] where *n* is the order of the elliptic curve base point. The
public key ``pubKey`` is an elliptic curve point such that
``pubKey = privKey``\ Â· ``G``, where ``G`` is the base point of the
elliptic curve.


The context of the point ``pubKey`` as an elliptic curve point must be
created by using the functions
`ECCPPointGetSize <eccppointgetsize.html>`__
and
`ECCPPointInit <eccppointinit.html>`__.


The elliptic curve domain parameters must be defined by one of the
functions:
`ECCPSet <eccpset.html>`__
or
`ECCPSetStd <eccpsetstd.html>`__.


Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * - ippStsNoErr    
     - Indicates no error. Any other value indicates an error or warning.
   * - ippStsNullPtrErr   
     - Indicates an error condition if any of the specified pointers is NULL.
   * - ippStsContextMatchErr   
     - Indicates an error condition if one of the contexts pointed by pPrivate, pPublic, or pECC is not valid.
   * - ippStsIvalidPrivateKey   
     - Indicates an error condition if the value of the private key falls outside the range of [1, *n*-1].



