.. _eccpcomparepoint:


ECCPComparePoint
================


Compares two points on the elliptic curve defined over GF(p).


Syntax
------


IppStatus ippsECCPComparePoint(const IppsECCPPointState\* pP, const
IppsECCPPointState\* pQ, IppECResult\* pResult, IppsECCPState\* pECC);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * - pP   
     - Pointer to the elliptic curve point *P*.
   * - pQ   
     - Pointer to the elliptic curve point *Q*.
   * - pResult   
     - Pointer to the comparison result of two points: *P* and *Q*.
   * - pECC   
     - Pointer to the context of the elliptic cryptosystem.




Description
-----------


The function compares two points *P* and *Q* on the elliptic curve
defined over a prime finite field GF(*p*) and allocates the comparison
result in accordance with the pointer pResult.


The elliptic curve domain parameters must be hitherto defined by one of
the functions:
`ECCPSet <eccpset.html>`__
or
`ECCPSetStd <eccpsetstd.html>`__.


The comparison result of two points *P* and *Q* can take one of the
following values:


.. list-table:: 
   :header-rows: 0

   * - ippECPointIsEqual   
     - Points *P* and *Q* are equal.
   * - ippECPointIsNotEqual   
     - Points *P* and *Q* are different.




Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * - ippStsNoErr    
     - Indicates no error. Any other value indicates an error or warning.
   * - ippStsNullPtrErr   
     - Indicates an error condition if any of the specified pointers is NULL.
   * - ippStsContextMatchErr   
     - Indicates an error condition if one of the contexts pointed by pP or pECC is not valid.



