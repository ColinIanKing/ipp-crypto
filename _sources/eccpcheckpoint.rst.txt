.. _eccpcheckpoint:

ECCPCheckPoint
==============


Checks *correctness of the point on the elliptic curve defined over
GF(*\ p\ *).*


Syntax
------


IppStatus ippsECCPCheckPoint(const IppsECCPPointState\* pP,
IppECResult\* pResult, IppsECCPState\* pECC);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * - pP   
     - Pointer to the elliptic curve point.
   * - pResult   
     - Pointer to the result of the check.
   * - pECC   
     - Pointer to the context of the elliptic cryptosystem.




Description
-----------


The function checks the correctness of the point on the elliptic curve
defined over a prime finite field GF(*p*) and allocates the result of
the check in accordance with the pointer pResult.


The elliptic curve domain parameters must be hitherto defined by one of
the functions:
`ECCPSet <eccpset.html>`__
or
`ECCPSetStd <eccpsetstd.html>`__.


The result of the check for the correctness of the point can take one of
the following values:


.. list-table:: 
   :header-rows: 0

   * - ippECValid   
     - Point is on the elliptic curve.
   * - ippECPointIsNotValid   
     - Point is not on the elliptic curve and is not the point at infinity.
   * - ippECPointIsAtInfinite   
     - Point is the point at infinity.




Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * - ippStsNoErr    
     - Indicates no error. Any other value indicates an error or warning.
   * - ippStsNullPtrErr   
     - Indicates an error condition if any of the specified pointers is NULL.
   * - ippStsContextMatchErr   
     - Indicates an error condition if one of the contexts pointed by pP or pECC is not valid.



