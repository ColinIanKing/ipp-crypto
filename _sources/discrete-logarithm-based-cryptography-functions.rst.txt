.. _discrete-logarithm-based-cryptography-functions:


Discrete-Logarithm-Based Cryptography Functions
===============================================


This section introduces Intel® Integrated Performance Primitives (Intel®
IPP) Cryptography functions allowing for different operations with
Discrete Logarithm (DL) based cryptosystem over a prime finite field
GF(*p*). The functions are mainly based on the [`IEEE
P1363A <bibliography.html>`__]
standard. Implementation of the Digital Signature operations is based on
[`FIPS PUB
186-2 <bibliography.html>`__].
The Diffie-Hellman (DH) Agreement scheme is based on
[`X9.42 <bibliography.html>`__].


All functions described in this section employ the IppsDLPState context
as operational vehicle that carries domain parameters of the DL
cryptosystem, a pair of keys, and working buffers.


The application code intended for executing typical operations should
perform the following sequence of operations:


#. Call the function
   `DLPGetSize <dlpgetsize.html>`__
   to get the size required to configure the IppsDLPState context.
#. Ensure that the required memory space is properly allocated. With the
   allocated memory, call the
   `DLPInit <dlpinit.html>`__
   function to initialize the context of the DL-based cryptosystem.
#. Set domain parameters of the DL-based cryptosystem by calling the
   `DLPSet <dlpset.html>`__
   function, or generate domain parameters by calling the
   `DLPGenerateDSA <dlpgeneratedsa.html>`__
   or
   `DLPGenerateDH <dlpgeneratedh.html>`__.
#. Call one of the functions
   `DLPSignDSA <dlpsigndsa.html>`__,
   `DLPVerifyDSA <dlpverifydsa.html>`__,
   and
   `DLPSharedSecretDH <dlpsharedsecretdh.html>`__
   to compute digital signature, to verify authenticity of the digital
   signature, and to compute the shared element accordingly.
#. Clean up secret data stored in the context.
#. Free the memory allocated for the IppsDLPState context by calling the
   operating system memory free service function unless the context is
   no longer needed.


The IppsDLPState context is position-dependent. The
`DLPPack/DLPUnpack <dlppack-dlpunpack.html>`__
functions transform the position-dependent context to a
position-independent form and vice versa.


.. rubric:: Related Information

:ref:`data-security-considerations`


.. toctree::
   :maxdepth: 1

   
   dlpgetsize
   dlpinit
   dlppack-dlpunpack
   dlpset
   dlpget
   dlpsetdp
   dlpgetdp
   dlpgenkeypair
   dlppublickey
   dlpvalidatekeypair
   dlpsetkeypair
   dlpgeneratedsa
   dlpvalidatedsa
   dlpsigndsa
   dlpverifydsa
   example-of-using-discrete-logarithm-based-cryptography-functions
   dlpgeneratedh
   dlpvalidatedh
   dlpsharedsecretdh
   dlgetresultstring
