.. _eccpsetkeypair:


ECCPSetKeyPair
==============


Sets private and/or public keys of the elliptic cryptosystem over GF(p).


Syntax
------


IppStatus ippsECCPSetKeyPair(const IppsBigNumState\* pPrivate, const
IppsECCPPointState\* pPublic, IppBool regular, IppsECCPState\* pECC);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * - pPrivate   
     - Pointer to the private key ``privKey``.
   * - pPublic   
     - Pointer to the public key ``pubKey``.
   * - regular   
     - Key status flag.
   * - pECC   
     - Pointer to the context of the elliptic cryptosystem.




Description
-----------


The function sets a private key ``privKey`` and/or public key ``pubKey``
in the elliptic cryptosystem defined over a prime finite field GF(*p*).


The private key ``privKey`` is a number that lies in the range of [1,
*n*-1] where *n* is the order of the elliptic curve base point. The
public key ``pubKey`` is an elliptic curve point such that
``pubKey = privKey``\ Â· ``G``, where ``G`` is the base point of the
elliptic curve.


The two possible values of the parameter regular define the key
timeliness status:


.. list-table:: 
   :header-rows: 0

   * - ippTrue   
     - Keys are regular.
   * - ippFalse   
     - Keys are ephemeral.




The elliptic curve domain parameters must be hitherto defined by one of
the functions:
`ECCPSet <eccpset.html>`__
or
`ECCPSetStd <eccpsetstd.html>`__.


Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * - ippStsNoErr    
     - Indicates no error. Any other value indicates an error or warning.
   * - ippStsNullPtrErr   
     - Indicates an error condition if any of the specified pointers is NULL.
   * - ippStsContextMatchErr   
     - Indicates an error condition if one of the contexts pointed by pPrivate, pPublic, or pECC is not valid.



