.. _eccpsetstd:


ECCPSetStd
==========


Sets up a recommended set of domain parameters for an elliptic curve
over GF(*p*).


Syntax
------


IppStatus ippsECCPSetStd128r1(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd128r2(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd192r1(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd224r1(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd256r1(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd384r1(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd521r1(IppsECCPState\* pECC);


IppStatus ippsECCPSetStdSM2(IppsECCPState\* pECC);


IppStatus ippsECCPSetStd(IppECCType flag, IppsECCPState\* pECC);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * - flag   
     - Set specifier.
   * - pECC   
     - Pointer to the cryptosystem context.




Description
-----------


Each of the ECCPSetStd functions sets a recommended set of domain
parameters for an elliptic curve over a prime finite field GF(*p*).


**Functions with One Parameter**


All the functions but the last one set domain parameters for standard
elliptic curves, listed in table `Standard Elliptic
Curves <functions-based-on-gf-p.html>`__.
Before a call to each of these functions, create the cryptosystem
context by calling the appropriate
`ECCPGetSizeStd <eccpgetsizestd.html>`__ and
`ECCPInitStd <eccpinitstd.html>`__
functions.


**Function with Two Parameters**


For the last function, the value of the parameter flag defines the set
of domain parameters. Possible values of flag are as follows:


.. list-table:: 
   :header-rows: 0

   * - IppECCPStd112r1   
     - For the cryptosystem context where feBitSize==112
   * - IppECCPStd112r2   
     - For the cryptosystem context where feBitSize==112
   * - IppECCPStd128r1   
     - For the cryptosystem context where feBitSize==128
   * - IppECCPStd128r2   
     - For the cryptosystem context where feBitSize==128
   * - IppECCPStd160r1   
     - For the cryptosystem context where feBitSize==160
   * - IppECCPStd160r2   
     - For the cryptosystem context where feBitSize==160
   * - IppECCPStd192r1   
     - For the cryptosystem context where feBitSize==192
   * - IppECCPStd224r1   
     - For the cryptosystem context where feBitSize==224
   * - IppECCPStd256r1   
     - For the cryptosystem context where feBitSize==256
   * - IppECCPStd384r1   
     - For the cryptosystem context where feBitSize==384
   * - IppECCPStd521r1   
     - For the cryptosystem context where feBitSize==521.




For more information on parameter values for the recommended elliptic
curves, see
[`SEC2 <bibliography.html>`__].


Before a call to this function, create the cryptosystem context by
calling the
`ECCPGetSize <eccpgetsize.html>`__
and
`ECCPInit <eccpinit.html>`__
functions. The value of feBitSize is applied when these functions are
called and predetermines the choice of the flag value.


Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * - ippStsNoErr    
     - Indicates no error. Any other value indicates an error or warning.
   * - ippStsNullPtrErr   
     - Indicates an error condition if any of the specified pointers is NULL.
   * - ippStsContextMatchErr   
     - Indicates an error condition if the cryptosystem context is not valid.
   * - ippStsECCInvalidFlagErr   
     - Indicates an error condition if the value of the parameter flag is not valid.



