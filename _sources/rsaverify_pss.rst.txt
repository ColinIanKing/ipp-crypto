.. _rsaverify_pss:

RSAVerify_PSS
=============


Carries out the RSA-SSA signature verification scheme.


Syntax
------


IppStatus ippsRSAVerify_PSS(const Ipp8u\* pMsg, int msgLen, const
Ipp8u\* pSign, int\* pIsSignValid, const IppsRSAPublicKeyState\* pKey,
IppHashAlgId hashAlg, Ipp8u\* pBuffer);


IppStatus ippsRSAVerify_PSS_rmf(const Ipp8u\* pMsg, int msgLen, const
Ipp8u\* pSign, int\* pIsSignValid, const IppsRSAPublicKeyState\* pKey,
const IppsHashMethod\* pMethod, Ipp8u\* pBuffer);


Include Files
-------------


``ippcp.h``


Parameters
----------


.. list-table:: 
   :header-rows: 0

   * -     pMsg    
     -  Pointer to the octet message that has been signed.
   * -     msgLen    
     -  Length in octets of the \*pMsg message.
   * -     pSign    
     -  Pointer to the octet signature string to be verified.
   * -     pIsSignValid    
     -  Pointer to the verification result.
   * -     pKey    
     -  Pointer to the properly initialized IppsRSAPublicKeyState context.
   * -     hashAlg   
     -  Identifier of the hash algorithm. For details, see table `Supported Hash Algorithms <one-way-hash-primitives.html>`__.
   * -     pMethod   
     -  Pointer to the hash method. For details, see `HashMethod <hashmethod.html>`__ functions.
   * -     pBuffer   
     -  Pointer to the scratch buffer of size not less than returned by the `RSA_GetBufferSizePublicKey <rsa_getbuffersizepublickey-rsa_getbuffersizeprivatekey.html>`__ function.




Description
-----------


The function carries out the RSASSA-PSS signature verification scheme
defined in [`PKCS
1.2.1 <bibliography.html>`__].
RSAVerify_PSS verifies the signature generated by the
`RSASign_PSS <rsasign_pss.html>`__
function called with the same hashAlg or pMethod parameter.


.. note::


   This function has a *reduced memory footprint* version. To learn
   more, see `Reduced Memory Footprint
   Functions <one-way-hash-primitives.html>`__.


Return Values
-------------


.. list-table:: 
   :header-rows: 0

   * -     ippStsNoErr   
     -     Indicates no error. Any other value indicates an error or warning.   
   * -     ippStsNullPtrErr   
     -     Indicates an error condition if any of the specified pointers is NULL.   
   * -     ippStsContextMatchErr   
     -     Indicates an error condition if the context parameter does not match the operation.   
   * -     ippStsIncompleteContextErr   
     -     Indicates an error condition if the public key is not set up.   
   * -     ippsStsNotSupportedModeErr   
     -      Indicates an error condition if the hashAlg parameter does not match any value of IppHashAlgId listed in table `Supported Hash Algorithms <one-way-hash-primitives.html>`__.   


.. rubric:: Related Information

:ref:`rsa_setpublickey-rsa_setprivatekeytype1-rsa_setprivatekeytype2`
